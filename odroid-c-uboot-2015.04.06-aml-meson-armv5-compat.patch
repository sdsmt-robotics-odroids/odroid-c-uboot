--- a/arch/arm/cpu/aml_meson/config.mk	2015-08-07 01:27:54.000000000 -0700
+++ b/arch/arm/cpu/aml_meson/config.mk	2015-11-28 23:55:07.258433501 -0800
@@ -1,6 +1,7 @@
 CROSS_COMPILE=arm-none-eabi-
 ARM_CPU=cortex-a9
-PLATFORM_CPPFLAGS += $(call cc-option,-mcpu=cortex-a9 -ffixed-r8 -mno-long-calls  -Wall -fPIC )
+# Make ARMv5 to allow more compilers to work, even though its v7a.
+PLATFORM_CPPFLAGS += $(call cc-option,-march=armv5 -ffixed-r8 -mno-long-calls  -Wall -fPIC )
 PF_CPPFLAGS_NO_UNALIGNED := $(call cc-option, -mno-unaligned-access,)
 PLATFORM_CPPFLAGS += $(PF_CPPFLAGS_NO_UNALIGNED)
 #USE_PRIVATE_LIBGCC=yes
--- a/arch/arm/cpu/aml_meson/cpu.c	2015-08-07 01:27:54.000000000 -0700
+++ b/arch/arm/cpu/aml_meson/cpu.c	2015-11-28 23:25:12.764142035 -0800
@@ -57,12 +57,20 @@
 	/* turn off I/D-cache */
 	icache_disable();
 	icache_invalid();
-	asm("isb");	
+#if defined(__thumb__)
+	asm(".hword 0xF3BF, 0x8F6F"); // isb; darn -march=armv5
+#else
+	asm(".word  0xF57FF06F"); // isb; darn -march=armv5
+#endif
 #endif
 	
 #ifndef CONFIG_DCACHE_OFF
 	dcache_disable();
-	asm("dsb");
+#if defined(__thumb__)
+	asm(".hword 0xF3BF, 0x8F4F"); // dsb; darn -march=armv5
+#else
+	asm(".word  0xF57FF04F"); // dsb; darn -march=armv5
+#endif
 #endif
 		
 //#ifndef CONFIG_ICAHCE_OFF
@@ -93,8 +101,13 @@
 	l2_cache_enable();
 #endif
 */
-	asm("dsb");
-	asm("isb");	
+#if defined(__thumb__)
+	asm(".hword 0xF3BF, 0x8F4F"); // dsb; darn -march=armv5
+	asm(".hword 0xF3BF, 0x8F6F"); // isb; darn -march=armv5
+#else
+	asm(".word  0xF57FF04F"); // dsb; darn -march=armv5
+	asm(".word  0xF57FF06F"); // isb; darn -march=armv5
+#endif
 	return 0;
 }
 /*
--- a/arch/arm/cpu/aml_meson/start.S	2015-08-07 01:27:54.000000000 -0700
+++ b/arch/arm/cpu/aml_meson/start.S	2015-11-28 23:29:34.084702555 -0800
@@ -112,8 +112,13 @@
 
 reset:
 	//wfi
-	dmb
-	isb
+#if defined(__thumb__)
+	.hword	0xF3BF, 0x8F4F	@ dsb; darn -march=armv5
+	.hword	0xF3BF, 0x8F6F	@ isb; darn -march=armv5
+#else
+	.word	0xF57FF04F	@ dsb; darn -march=armv5
+	.word	0xF57FF06F	@ isb; darn -march=armv5
+#endif
 	/*
 	 * set the cpu to SVC32 mode
 	 */
--- a/arch/arm/cpu/aml_meson/uclboot/misc.c	2015-08-07 01:27:54.000000000 -0700
+++ b/arch/arm/cpu/aml_meson/uclboot/misc.c	2015-11-28 23:25:12.765141966 -0800
@@ -52,8 +52,13 @@
 
 	/* mem barrier to sync up things */
 	asm("mcr p15, 0, %0, c7, c10, 4": :"r"(i));
-	asm("dsb");
-	asm("isb");	
+#if defined(__thumb__)
+	asm(".hword 0xF3BF, 0x8F4F"); // dsb; darn -march=armv5
+	asm(".hword 0xF3BF, 0x8F6F"); // isb; darn -march=armv5
+#else
+	asm(".word  0xF57FF04F"); // dsb; darn -march=armv5
+	asm(".word  0xF57FF06F"); // isb; darn -march=armv5
+#endif
 
     JumpAddr target=(JumpAddr)(CONFIG_SYS_TEXT_BASE);
     target();
--- a/arch/arm/cpu/aml_meson/uclboot/start.S	2015-08-07 01:27:54.000000000 -0700
+++ b/arch/arm/cpu/aml_meson/uclboot/start.S	2015-11-28 23:50:02.544915490 -0800
@@ -217,9 +217,17 @@
 	mov r3,#0
 	mcr p15,0,r3,c7,c5,6   @ Invalidate BTAC
 	mcr p15,0,r3,c7,c5,0   @ Invalidate ICache
-	dsb
+#if defined(__thumb__)
+	.hword 0xF3BF, 0x8F4F  @ dsb; darn -march=armv5
+#else
+	.word  0xF57FF04F      @ dsb; darn -march=armv5
+#endif
 	mcr p15,0,r3,c8,c7,0   @ Invalidate TLBs
-	dsb
+#if defined(__thumb__)
+	.hword 0xF3BF, 0x8F4F  @ dsb; darn -march=armv5
+#else
+	.word  0xF57FF04F      @ dsb; darn -march=armv5
+#endif
 #endif//UCL_DEC_EN_IDCACHE_FINE_TUNE
 	mov	ip, lr			@ persevere link reg across call
 	bl	new_d_inval		@ go setup pll,mux,memory
@@ -283,8 +291,13 @@
 /*    mcr	p15, 0, r0, c7, c6, 0	@ invalidate dcache */
     mcr p15, 0, r0, c7, c5, 6   @ invaliddate entire branch preditor 
     mcr	p15, 0, r0, c7, c5, 0	@ invalidate icache
-    DSB
-    ISB
+#if defined(__thumb__)
+    .hword 0xF3BF, 0x8F4F  @ dsb; darn -march=armv5
+    .hword 0xF3BF, 0x8F6F  @ isb; darn -march=armv5
+#else
+    .word  0xF57FF04F      @ dsb; darn -march=armv5
+    .word  0xF57FF06F      @ isb; darn -march=armv5
+#endif
     NOP
 
     @ read d-cache size
@@ -319,8 +332,13 @@
     add r5,  r5, #0x20
     cmp r2, r6
     bne clean_inv
-    DSB
-    ISB
+#if defined(__thumb__)
+    .hword 0xF3BF, 0x8F4F  @ dsb; darn -march=armv5
+    .hword 0xF3BF, 0x8F6F  @ isb; darn -march=armv5
+#else
+    .word  0xF57FF04F      @ dsb; darn -march=armv5
+    .word  0xF57FF06F      @ isb; darn -march=armv5
+#endif
     
 	mov r0,#0
 __NOP:    
--- a/arch/arm/lib/cache-cp15.c	2015-08-07 01:27:54.000000000 -0700
+++ b/arch/arm/lib/cache-cp15.c	2015-11-28 23:39:50.191208898 -0800
@@ -60,10 +60,19 @@
 		     	
  	asm volatile("mcr p15, 0, %0, c7, c5, 6"   : : "r" (0));   // invalidate BTAC    				   	
  	asm volatile("mcr p15, 0, %0, c7, c5, 0"   : : "r" (0));   // invalidate ICache
-   asm volatile("dsb");
+#if defined(__thumb__)
+	asm volatile(".hword 0xF3BF, 0x8F4F");   // dsb; darn -march=armv5
+#else
+	asm volatile(".word  0xF57FF04F");   // dsb; darn -march=armv5
+#endif
    asm volatile("mcr p15, 0, %0, c8, c7, 0"	  : : "r" (0));    // invalidate TLBs
-	asm volatile("dsb");
- 	asm volatile("isb");
+#if defined(__thumb__)
+	asm volatile(".hword 0xF3BF, 0x8F4F");   // dsb; darn -march=armv5
+	asm volatile(".hword 0xF3BF, 0x8F6F");   // isb; darn -march=armv5
+#else
+	asm volatile(".word  0xF57FF04F");   // dsb; darn -march=armv5
+	asm volatile(".word  0xF57FF06F");   // isb; darn -march=armv5
+#endif
 	
 	/* and enable the mmu */
 	reg = get_cr();	/* get control reg. */
--- a/arch/arm/lib/cache_init.S	2015-08-07 01:27:54.000000000 -0700
+++ b/arch/arm/lib/cache_init.S	2015-11-28 23:48:01.152494336 -0800
@@ -13,14 +13,26 @@
 	MOV r3,#0
 	MCR p15,0,r3,c7,c5,6 			// Invalidate BTAC
 	MCR p15,0,r3,c7,c5,0			// Invalidate ICache
-	DSB
+#if defined(__thumb__)
+	.hword 0xF3BF, 0x8F4F			// dsb; darn -march=armv5
+#else
+	.word  0xF57FF04F			// dsb; darn -march=armv5
+#endif
 	MCR p15,0,r3,c8,c7,0			// Invalidate TLBs
-	DSB
+#if defined(__thumb__)
+	.hword 0xF3BF, 0x8F4F			// dsb; darn -march=armv5
+#else
+	.word  0xF57FF04F			// dsb; darn -march=armv5
+#endif
 
 	mov r11,lr
 //	BL _invalidate_dcache		@ Invalidate DCache
 	BL new_d_inval
-	DSB
+#if defined(__thumb__)
+	.hword 0xF3BF, 0x8F4F			// dsb; darn -march=armv5
+#else
+	.word  0xF57FF04F			// dsb; darn -march=armv5
+#endif
 	
 	// Enable MMU, Caches etc.
 	MRC p15, 0, r0, c1, c0, 0 		// get control register
@@ -33,8 +45,13 @@
 #endif	
 	ORR r0, r0, #1   	       		// enable MMU
 	MCR p15, 0, r0, c1, c0, 0 		// write control register
-	DSB
-	ISB
+#if defined(__thumb__)
+	.hword 0xF3BF, 0x8F4F			// dsb; darn -march=armv5
+	.hword 0xF3BF, 0x8F6F			// isb; darn -march=armv5
+#else
+	.word  0xF57FF04F			// dsb; darn -march=armv5
+	.word  0xF57FF06F			// isb; darn -march=armv5
+#endif
 	
 	
 
--- a/arch/arm/lib/cache_v7.S	2015-08-07 01:27:54.000000000 -0700
+++ b/arch/arm/lib/cache_v7.S	2015-11-28 23:51:37.175446129 -0800
@@ -26,7 +26,11 @@
     ADD     r5,r5,#0x20
     CMP     r2,r6
     BNE     invalidate_loop
-    DSB
+#if defined(__thumb__)
+    .hword 0xF3BF, 0x8F4F  @ dsb; darn -march=armv5
+#else
+    .word  0xF57FF04F      @ dsb; darn -march=armv5
+#endif
     pop {r4, r5,r6, pc}
 
 @void _clean_dcache(void);
@@ -49,7 +53,11 @@
     ADD     r5,r5,#0x20
     CMP     r2,r6
     BNE     clean_loop
-    DSB
+#if defined(__thumb__)
+    .hword 0xF3BF, 0x8F4F  @ dsb; darn -march=armv5
+#else
+    .word  0xF57FF04F      @ dsb; darn -march=armv5
+#endif
     pop {r4, r5,r6, pc}
 
 @void _clean_invd_dcache(void);
@@ -72,7 +80,11 @@
     ADD     r5,r5,#0x20
     CMP     r2,r6
     BNE     clean_invd_loop
-    DSB
+#if defined(__thumb__)
+    .hword 0xF3BF, 0x8F4F  @ dsb; darn -march=armv5
+#else
+    .word  0xF57FF04F      @ dsb; darn -march=armv5
+#endif
     pop {r4, r5,r6, pc}
 
 
@@ -80,7 +92,11 @@
 _clean_dcache_addr:
     push    {r4,r5,r6,lr}
     MCR     p15,0,r0,c7,c10,1  @ invalidate dcache by MVA to PoC 
-    DSB
+#if defined(__thumb__)
+    .hword 0xF3BF, 0x8F4F  @ dsb; darn -march=armv5
+#else
+    .word  0xF57FF04F      @ dsb; darn -march=armv5
+#endif
     pop {r4, r5,r6, pc}
 
 @void _invalidate_dcache_addr2(unsigned long addr);
@@ -94,14 +110,22 @@
 _invalidate_dcache_addr:
     push    {r4,r5,r6,lr}
     MCR     p15,0,r0,c7,c6,1  @ invalidate dcache by MVA to PoC 
-    DSB
+#if defined(__thumb__)
+    .hword 0xF3BF, 0x8F4F  @ dsb; darn -march=armv5
+#else
+    .word  0xF57FF04F      @ dsb; darn -march=armv5
+#endif
     pop {r4, r5,r6, pc}
 
 @void _clean_invd_dcache_addr(unsigned long addr);
 _clean_invd_dcache_addr:
     push    {r4,r5,r6,lr}
     MCR     p15,0,r0,c7,c14,1  @ invalidate dcache by MVA to PoC 
-    DSB
+#if defined(__thumb__)
+    .hword 0xF3BF, 0x8F4F  @ dsb; darn -march=armv5
+#else
+    .word  0xF57FF04F      @ dsb; darn -march=armv5
+#endif
     pop {r4, r5,r6, pc}
   
 
@@ -111,7 +135,11 @@
 	MOV r0,#0
 	MCR p15,0,r0,c7,c5,6 		@ Invalidate BTAC
 	MCR p15,0,r0,c7,c5,0		@ Invalidate ICache
-	DSB
+#if defined(__thumb__)
+        .hword 0xF3BF, 0x8F4F  @ dsb; darn -march=armv5
+#else
+        .word  0xF57FF04F      @ dsb; darn -march=armv5
+#endif
     NOP
     NOP
     pop {r4, pc}
